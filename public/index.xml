<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web-tools</title>
    <link>https://tools.skgadi.com/index.xml</link>
    <description>Recent content on Web-tools</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2017 Suresh Kumar Gadi</copyright>
    <lastBuildDate>Sat, 25 Feb 2017 00:00:00 -0600</lastBuildDate>
    <atom:link href="https://tools.skgadi.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Multifactorial experiment simulator</title>
      <link>https://tools.skgadi.com/mathematics/multifactorial-experiment-simulator/</link>
      <pubDate>Sat, 25 Feb 2017 00:00:00 -0600</pubDate>
      
      <guid>https://tools.skgadi.com/mathematics/multifactorial-experiment-simulator/</guid>
      <description>&lt;p&gt;This tool allows user to simulate multifactorial experiments. The optimization result can be verified here: This tool provides an error of the estimated values for the factors.&lt;/p&gt;
&lt;div class=&#34;w3-row&#34;&gt;
	&lt;header class=&#34;w3-theme w3-padding&#34;&gt;Select number of factors&lt;/header&gt;
	&lt;div class=&#34;w3-col m12 l12 s12&#34;&gt;
		&lt;input id=&#34;NumOfFactors&#34; class=&#34;w3-input w3-border w3-border-theme&#34; placeholder=&#34;Enter an integer&#34; type=&#34;text&#34;&gt;
	&lt;/div&gt;
	&lt;div class=&#34;w3-col m12 l12 s12&#34;&gt;
		&lt;button id=&#34;Next000&#34; class=&#34;w3-btn w3-theme-d5 w3-ripple w3-block&#34;&gt;Next&lt;/button&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;FactorDeclaration&#34; class=&#34;w3-containter w3-margin-top w3-border w3-border-theme&#34;&gt;
	&lt;div class=&#34;w3-row&#34;&gt;
		&lt;header class=&#34;w3-theme w3-padding&#34;&gt;Select the upper and lower limits&lt;/header&gt;
		&lt;div class=&#34;w3-col m4 l4 s4 w3-padding w3-border w3-border-theme w3-center&#34;&gt;Factor&lt;/div&gt;
		&lt;div class=&#34;w3-col m4 l4 s4 w3-padding w3-border w3-border-theme w3-center&#34;&gt;Lower limit&lt;/div&gt;
		&lt;div class=&#34;w3-col m4 l4 s4 w3-padding w3-border w3-border-theme w3-center&#34;&gt;Upper limit&lt;/div&gt;
	&lt;/div&gt;
	&lt;div id=&#34;FactorLimits&#34; class=&#34;w3-row&#34;&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;PerformExperiment&#34; class=&#34;w3-containter w3-margin-top w3-border w3-border-theme&#34;&gt;
	&lt;header class=&#34;w3-theme w3-padding&#34;&gt;Perform individual experiment/measure distance from optimum value (validate optimum value)&lt;/header&gt;
	&lt;div class=&#34;w3-row&#34;&gt;
		&lt;div class=&#34;w3-col m6 l6 s6 w3-padding w3-border w3-border-theme w3-center&#34;&gt;Factor&lt;/div&gt;
		&lt;div class=&#34;w3-col m6 l6 s6 w3-padding w3-border w3-border-theme w3-center&#34;&gt;Value&lt;/div&gt;
	&lt;/div&gt;
	&lt;div id=&#34;FactorValues&#34; class=&#34;w3-row&#34;&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;PerformBulkExperiment&#34; class=&#34;w3-containter w3-margin-top w3-border w3-border-theme&#34;&gt;
	&lt;header class=&#34;w3-theme w3-padding&#34;&gt;Perform bulk experiments&lt;/header&gt;
	&lt;div class=&#34;w3-row&#34;&gt;
		&lt;div class=&#34;w3-col m12 l12 s12&#34;&gt;
			&lt;textarea id=&#34;BulkText&#34; style=&#34;width:100%; height: 100px; display: block;&#34; class=&#34;w3-code jsHigh notranslate w3-margin-0&#34; contenteditable=&#34;true&#34;&gt;To perform bulk experiments, paste your excel data here.&lt;/textarea&gt;
		&lt;/div&gt;
		&lt;div class=&#34;w3-col m12 l12 s12&#34;&gt;
			&lt;button id=&#39;BtnBulkCalculations&#39; class=&#39;w3-btn w3-theme-d5 w3-block w3-ripple&#39;&gt;Perform bulk experiments&lt;/button&gt;
		&lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
var Period = [];
var maxPoint = [];
var NumOfFactors;
var MaximumValueLimit;
var x = [];
$( document ).ready(function() {
	$(&#34;#Next000&#34;).click(function(){Next000()});
	$(&#34;#FactorDeclaration&#34;).css(&#34;display&#34;,&#34;none&#34;);
	$(&#34;#PerformExperiment&#34;).css(&#34;display&#34;,&#34;none&#34;);
	$(&#34;#PerformBulkExperiment&#34;).css(&#34;display&#34;,&#34;none&#34;);
	$(&#34;#BtnBulkCalculations&#34;).click(function(){PerformBulkCalc()});
	$(&#34;#BulkText&#34;).focusin(function(){
		$(&#34;#BulkText&#34;).select();
	});
	$(&#34;#NumOfFactors&#34;).focus();
});
function Next000() {
	NumOfFactors = parseInt($(&#39;#NumOfFactors&#39;).val());
	$(&#39;#NumOfFactors&#39;).val(NumOfFactors);
	if (NumOfFactors&gt;0) {
		$(&#34;#NumOfFactors&#34;).prop(&#39;disabled&#39;, true);
		$(&#34;#Next000&#34;).text(&#34;Reset&#34;);
		$(&#34;#Next000&#34;).attr(&#39;onclick&#39;,&#39;&#39;).unbind(&#39;click&#39;);
		$(&#34;#Next000&#34;).click(function(){ResetAll()});
		for(var i=0; i&lt;NumOfFactors; i++) {
			$(&#34;#FactorLimits&#34;).append(&#34;&lt;div class=&#39;w3-col m4 l4 s4&#39;&gt;&lt;input id=&#39;FactorLabel&#34;+i+&#34;&#39; class=&#39;w3-input w3-border w3-border-theme&#39; type=&#39;text&#39; value=&#39;Factor &#34;+i+&#34;&#39;&gt;&lt;/div&gt;&#34;);
			$(&#34;#FactorLimits&#34;).append(&#34;&lt;div class=&#39;w3-col m4 l4 s4&#39;&gt;&lt;input id=&#39;FactorLLimit&#34;+i+&#34;&#39; class=&#39;w3-input w3-border w3-border-theme w3-right-align&#39; type=&#39;text&#39; value=&#39;0&#39;&gt;&lt;/div&gt;&#34;);
			$(&#34;#FactorLimits&#34;).append(&#34;&lt;div class=&#39;w3-col m4 l4 s4&#39;&gt;&lt;input id=&#39;FactorULimit&#34;+i+&#34;&#39; class=&#39;w3-input w3-border w3-border-theme w3-right-align&#39; type=&#39;text&#39; value=&#39;100&#39;&gt;&lt;/div&gt;&#34;);
		}
		$(&#34;#FactorLimits&#34;).append(&#34;&lt;button id=&#39;Next001&#39; class=&#39;w3-btn w3-theme-d5 w3-block w3-ripple&#39;&gt;Confirm limits&lt;/button&gt;&#34;);
		$(&#34;#FactorDeclaration&#34;).css(&#34;display&#34;,&#34;block&#34;);
		$(&#34;#Next001&#34;).click(function(){Next001()});
	} else
		$.notify(&#34;Enter a positive integer. Number of factors cannot be less than 1.&#34;, &#34;info&#34;);
}
function ResetAll() {
	if (confirm(&#39;This will reset the limits and the experiment.&#39;)) {
		ResetLimitsDeclarationAuthorized();
		$(&#34;#Next000&#34;).attr(&#39;onclick&#39;,&#39;&#39;).unbind(&#39;click&#39;);
		$(&#34;#Next000&#34;).click(function(){Next000()});
		$(&#34;#NumOfFactors&#34;).prop(&#39;disabled&#39;, false);
		$(&#34;#Next000&#34;).text(&#34;Next&#34;);
		$(&#34;#FactorLimits&#34;).empty();
		$(&#34;#FactorDeclaration&#34;).css(&#34;display&#34;,&#34;none&#34;);
	}
}
function Next001() {
	var ElementsCount = $(&#34;#FactorLimits&#34;).children().length;
	var LLimit;
	var ULimit;
	var AllGood = true;
	var maxRange = 0.7;
	Period = [];
	maxPoint = [];
	for (var i=0; i&lt;NumOfFactors; i++) {
		LLimit = parseFloat($(&#34;#FactorLLimit&#34;+i).val());
		ULimit = parseFloat($(&#34;#FactorULimit&#34;+i).val());
		$(&#34;#FactorLLimit&#34;+i).val(LLimit);
		$(&#34;#FactorULimit&#34;+i).val(ULimit);
		Period[i] = ULimit - LLimit;
		if (Period[i]&gt;0 &amp;&amp; $(&#34;#FactorLabel&#34;+i).val())
			maxPoint[i] = LLimit + Period[i]*(maxRange)*Math.random() + Period[i]*(1-maxRange)/2;
		else {
			AllGood = false;
			$(&#34;#FactorLLimit&#34;+i).focus();
			$(&#34;#FactorLLimit&#34;+i).select();
			$.notify(&#34;Label cannot be balnk. Also, make sure the limits are numeric values, where the upper limit is grater than the lower limit.&#34;, &#34;info&#34;);
			break;
		}
	}
	if (AllGood) {
		DisableTheLimitsDeclaration (true);
		$(&#34;#Next001&#34;).attr(&#39;onclick&#39;,&#39;&#39;).unbind(&#39;click&#39;);
		$(&#34;#Next001&#34;).click(function(){ResetLimitsDeclaration()});
		$(&#34;#Next001&#34;).text(&#34;Modify factors/limits&#34;);
		for(var i=0; i&lt;NumOfFactors; i++) {
			$(&#34;#FactorValues&#34;).append(&#34;&lt;div class=&#39;w3-col m6 l6 s6&#39;&gt;&lt;input class=&#39;w3-input w3-border w3-border-theme&#39; type=&#39;text&#39; value=&#39;&#34;+$(&#34;#FactorLabel&#34;+i).val()+&#34;&#39; disabled&gt;&lt;/div&gt;&#34;);
			$(&#34;#FactorValues&#34;).append(&#34;&lt;div class=&#39;w3-col m6 l6 s6&#39;&gt;&lt;input id=&#39;FValue&#34;+i+&#34;&#39; class=&#39;w3-input w3-border w3-border-theme w3-right-align&#39; type=&#39;text&#39;&gt;&lt;/div&gt;&#34;);
		}
		$(&#34;#FactorValues&#34;).append(&#34;&lt;div class=&#39;w3-col m6 l6 s6&#39;&gt;&lt;button id=&#39;Next002&#39; class=&#39;w3-btn w3-theme-d5 w3-border w3-border-theme w3-block w3-ripple&#39;&gt;Calculate response&lt;/button&gt;&lt;/div&gt;&#34;);
		$(&#34;#FactorValues&#34;).append(&#34;&lt;div class=&#39;w3-col m6 l6 s6&#39;&gt;&lt;button id=&#39;Next003&#39; class=&#39;w3-btn w3-theme-d5 w3-border w3-border-theme w3-block w3-ripple&#39;&gt;Is optimum&lt;/button&gt;&lt;/div&gt;&#34;);
		$(&#34;#FactorValues&#34;).append(&#34;&lt;div class=&#39;w3-col m12 l12 s12&#39;&gt;&lt;input id=&#39;ResponseValue&#39; class=&#39;w3-input w3-border w3-border-theme w3-center w3-xlarge&#39; type=&#39;text&#39; value=&#39;Press Calculate reponse button&#39; disabled&gt;&lt;/div&gt;&#34;);
		$(&#34;#PerformExperiment&#34;).css(&#34;display&#34;,&#34;block&#34;);
		$(&#34;#PerformBulkExperiment&#34;).css(&#34;display&#34;,&#34;block&#34;);
		$(&#34;#Next002&#34;).click(function(){Next002()});
		$(&#34;#Next003&#34;).click(function(){Next003()});
		MaximumValueLimit = 100+600*Math.random();
	}

}
function ResetLimitsDeclaration() {
	if (confirm(&#39;This will reset the current experiment.&#39;)) {
		ResetLimitsDeclarationAuthorized()
	}
}
function ResetLimitsDeclarationAuthorized() {
	$(&#34;#Next001&#34;).attr(&#39;onclick&#39;,&#39;&#39;).unbind(&#39;click&#39;);
	$(&#34;#Next001&#34;).click(function(){Next001()});
	$(&#34;#Next001&#34;).text(&#34;Confirm limits&#34;);
	DisableTheLimitsDeclaration(false);
	$(&#34;#FactorValues&#34;).empty();
	$(&#34;#PerformExperiment&#34;).css(&#34;display&#34;,&#34;none&#34;);
	$(&#34;#PerformBulkExperiment&#34;).css(&#34;display&#34;,&#34;none&#34;);
}
function DisableTheLimitsDeclaration(Disable) {
	for (var i=0; i&lt;NumOfFactors; i++) {
		$(&#34;#FactorLabel&#34;+i).prop(&#39;disabled&#39;, Disable);
		$(&#34;#FactorLLimit&#34;+i).prop(&#39;disabled&#39;, Disable);
		$(&#34;#FactorULimit&#34;+i).prop(&#39;disabled&#39;, Disable);
	}
}
function Next002(){
	//Validate input values
	var AllGood = AreInputValuesValidForX();
	if (AllGood) {
		Y = GetTheYValue ();
		$(&#34;#ResponseValue&#34;).val(&#34;Response= &#34;+Y);
		copyTextToClipboard(Y);
		$.notify(&#34;Response copied to the clipboard.&#34;, &#34;success&#34;);
	}
}
function GetTheYValue () {
	var Y=0;
	var sigmoidVal;
	for (var i=0; i&lt;NumOfFactors; i++) {
		sigmoidVal = 1/(1+Math.exp(3/Period[i]*(-x[i] + maxPoint[i])));
		Y = Y + MaximumValueLimit / NumOfFactors * (4 * sigmoidVal * (1 - sigmoidVal)+ 0.01*2*(Math.random()-0.5));
	}
	return Y
}
function Next003() {
	var error = 0;
	var LLimit;
	var ULimit;
	var AllGood = AreInputValuesValidForX();
	if (AllGood) {
		for (var i=0; i&lt;NumOfFactors; i++) {
			LLimit = parseFloat($(&#34;#FactorLLimit&#34;+i).val());
			ULimit = parseFloat($(&#34;#FactorULimit&#34;+i).val());
			error = error + Math.abs((x[i]-maxPoint[i])/(ULimit-LLimit));
		}
		error = error/NumOfFactors;
		$(&#34;#ResponseValue&#34;).val(&#34;Your input is &#34;+error*100+&#34;% away from the optimum value.&#34;);
	}
}
function AreInputValuesValidForX () {
	var AllGood = true;
	x = [];
	var LLimit;
	var ULimit;
	for (var i=0; i&lt;NumOfFactors; i++) {
		x[i] = parseFloat($(&#34;#FValue&#34;+i).val());
		$(&#34;#FValue&#34;+i).val(x[i]);
		LLimit = parseFloat($(&#34;#FactorLLimit&#34;+i).val());
		ULimit = parseFloat($(&#34;#FactorULimit&#34;+i).val());
		if (x[i]&lt;LLimit ||  x[i]&gt;ULimit) {
			AllGood = false;
			$(&#34;#FValue&#34;+i).focus();
			$(&#34;#FValue&#34;+i).select();
			$.notify(&#34;Enter a value with in the upper and lower limits.&#34;, &#34;info&#34;);
			break;
		}
	}
	return AllGood;
}
function PerformBulkCalc() {
	var Lines;
	var InputVars;
	var YOutPut = &#34;&#34;;
	var FoundLimitError;
	Lines = $(&#34;#BulkText&#34;).val().split(&#39;\n&#39;);
	for (var i=0; i&lt;Lines.length; i++) {
		InputVars = Lines[i].split(&#39;\t&#39;);
		if (InputVars.length == NumOfFactors) {
			FoundLimitError = false;
			for(var j=0; j&lt;InputVars.length; j++){
				x[j] = parseFloat(InputVars[j]);
				LLimit = parseFloat($(&#34;#FactorLLimit&#34;+j).val());
				ULimit = parseFloat($(&#34;#FactorULimit&#34;+j).val());
				if (x[j]&lt;LLimit ||  x[j]&gt;ULimit) {
					if (!FoundLimitError) {
						YOutPut += &#39;NaN\t Error(s):&#39;;
						FoundLimitError = true;
					}
					YOutPut += &#39; \&#34;&#39;+$(&#34;#FactorLabel&#34;+j).val()+&#39;\&#34; is out of limit;&#39;;
				}
			}
			if (!FoundLimitError){
				YOutPut += GetTheYValue()+&#39;\tGood&#39;;
			}
			YOutPut +=&#39;\n&#39;;
		} else
			YOutPut += &#39;NaN\tError(s): Number of factors do not match\n&#39;;
	}
	copyTextToClipboard(YOutPut);
	$.notify(&#34;Bulk results are copied to the clipboard.&#34;, &#34;success&#34;);
}



&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Comming soon ...</title>
      <link>https://tools.skgadi.com/others/comming-soon/</link>
      <pubDate>Thu, 16 Jun 2016 00:00:00 -0600</pubDate>
      
      <guid>https://tools.skgadi.com/others/comming-soon/</guid>
      <description>&lt;p&gt;Comming soon &amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>